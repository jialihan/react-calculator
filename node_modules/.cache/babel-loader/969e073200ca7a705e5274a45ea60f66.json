{"ast":null,"code":"var _jsxFileName = \"/Users/jellyhan/Documents/jialihan-git/react-calculator/src/component/calculator/Calculator.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport Button from 'component/button/Button';\nimport \"./Calculator.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Calculator(props) {\n  _s();\n\n  const [isEnterPressed, setIsEnterPressed] = useState(false);\n  const [isToggled, setIsToggled] = useState(false);\n  const [sum, setSum] = useState(0);\n  const [sign, setSign] = useState('');\n  const [isNewNum, setIsNewNum] = useState(true);\n  const [preOperator, setPreOperator] = useState('');\n  const [prevInput, setPrevInput] = useState('');\n  const [textInput, setTextInput] = useState('');\n  const [displayResult, setDisplayResult] = useState('');\n\n  const onClickHandler = (val, type) => {\n    if (val === 'C') {\n      clearHandler();\n    } else if (val === '+/-') {\n      toggleSignHandler();\n    } else if (val === '%') {\n      percentageHanlder();\n    } else if (val === '+') {\n      if (!isNewNum) {\n        compute('+');\n      }\n\n      setSign('+');\n      setIsNewNum(true);\n    } else if (val === '-') {\n      if (!isNewNum) {\n        compute('-'); // setSign('-');\n        // setIsNewNum(true);\n      } // else{\n      //     appendNumber('-');\n      // }\n\n\n      setSign('-');\n      setIsNewNum(true);\n    } else if (val === '*') {\n      if (!isNewNum) {\n        compute('*');\n      }\n\n      if (isEnterPressed) {\n        // 1 - 2 = -1 * 6 should output -6\n        setSum(0);\n        setPrevInput(sum);\n      }\n\n      setPreOperator('*'); // if(!isToggled)\n      // {\n      //     // after toggle, reset it to \"+\" sign\n      //     setSign('+');\n      //     setPrevInput(\"-1\");\n      // }\n\n      setIsNewNum(true);\n    } else if (val === '/') {\n      if (!isNewNum) {\n        compute('/');\n      }\n\n      setPreOperator('/');\n\n      if (isToggled) {\n        // after toggle, reset it to \"+\" sign\n        setSign('+');\n      }\n\n      setIsNewNum(true);\n    } else if (val === '=') {\n      compute('=');\n      setPrevInput('');\n      setPreOperator(''); // if(isToggled)\n      // {\n      //     // after toggle, reset it to \"+\" sign\n      //     setSign('+');\n      // }\n\n      setIsNewNum(true);\n      setIsEnterPressed(true);\n    } else {\n      appendNumber(val);\n    }\n\n    if (isToggled && val !== '+/-') {\n      setIsToggled(false);\n    }\n\n    if (isEnterPressed && val !== '=') {\n      setIsEnterPressed(false);\n    }\n  };\n\n  const clearHandler = () => {\n    setTextInput('');\n    setSum(0);\n    setPrevInput('');\n    setIsNewNum(true);\n    setDisplayResult('');\n  };\n\n  const toggleSignHandler = () => {\n    if (displayResult === '') {\n      return;\n    }\n\n    let newNum;\n\n    if (displayResult[0] === '-') {\n      newNum = displayResult.slice(1, displayResult.length);\n    } else {\n      newNum = '-' + displayResult;\n    }\n\n    if (isEnterPressed) {\n      setSum(parseFloat(newNum));\n    } else {\n      setTextInput(newNum);\n    }\n\n    updateResult(newNum); // setSum(0); // all future calc is from this current newNum\n\n    setIsNewNum(false); // because now we have a newNum\n\n    setIsToggled(true);\n  };\n\n  const percentageHanlder = () => {\n    let newNum = parseFloat(displayResult) / 100;\n    setTextInput(newNum);\n    setDisplayResult(newNum);\n  };\n\n  const appendNumber = num => {\n    let newNum;\n\n    if (isNewNum) {\n      newNum = '' + num;\n    } else {\n      if (num === '.' && textInput.indexOf('.') >= 0) {\n        return;\n      }\n\n      newNum = textInput + num;\n    }\n\n    setTextInput('' + newNum);\n    updateResult('' + newNum);\n    setIsNewNum(false);\n  };\n\n  const compute = op => {\n    let curNum = textInput ? parseFloat(textInput) : 0;\n    console.log(\"current num: \" + curNum);\n\n    if (op === '*' || op === \"/\") {\n      let newPreInput;\n\n      if (prevInput) {\n        // 4(preInput) *(preOperator) 2(curNum) *(op)\n        newPreInput = preOperator === \"*\" ? prevInput * curNum : prevInput / curNum;\n        updateResult('' + newPreInput);\n      } else if (preOperator) {\n        // 1 + 2 = 3 * 6 /(current op) 2\n        newPreInput = preOperator === \"*\" ? sum * curNum : sum / curNum;\n      } else {\n        // 4 * 2 \n        newPreInput = curNum;\n      }\n\n      setPrevInput(newPreInput); // }\n    }\n\n    if (op === '+' || op === '-' || op === '=') {\n      // 1 - 2 = -1 -> toggle = 1 -> \"=\" show sum error case\n      // if(op==='=' && isToggled)\n      // {\n      //     // invalid \"=\" after toggle, return -1\n      //     setSum(0);\n      //     setTextInput('-1');\n      //     updateResult('-1');\n      //     setPrevInput('-1');\n      //     setSign('+');\n      //     return;\n      // }\n      let newSum = 0;\n\n      if (prevInput) {\n        // 2 + 4 * 2 + ...\n        const tmp = preOperator === '*' ? prevInput * curNum : prevInput / curNum;\n        newSum = sum + (sign === '-' ? -tmp : tmp);\n      } else if (preOperator) {\n        // 1 + 2 = 3 * 3 ....\n        newSum = preOperator === \"*\" ? sum * curNum : sum / curNum;\n      } else {\n        // 2 + 3 - ...\n        newSum = sum + sign === '-' ? -curNum : curNum;\n      }\n\n      setSum(newSum);\n      updateResult('' + newSum);\n      setTextInput('' + curNum);\n    }\n  };\n\n  const updateResult = result => {\n    setDisplayResult(result);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: displayResult ? displayResult : '0'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"C\",\n        type: \"tool\",\n        clicked: onClickHandler,\n        children: \"C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"+/-\",\n        type: \"tool\",\n        clicked: onClickHandler,\n        children: \"+/-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"%\",\n        type: \"tool\",\n        clicked: onClickHandler,\n        children: \"%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"/\",\n        type: \"op\",\n        clicked: onClickHandler,\n        children: \"\\xF7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"7\",\n        clicked: onClickHandler,\n        children: \"7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"8\",\n        clicked: onClickHandler,\n        children: \"8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"9\",\n        clicked: onClickHandler,\n        children: \"9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"*\",\n        type: \"op\",\n        clicked: onClickHandler,\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"4\",\n        clicked: onClickHandler,\n        children: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"5\",\n        clicked: onClickHandler,\n        children: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"6\",\n        clicked: onClickHandler,\n        children: \"6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"-\",\n        type: \"op\",\n        clicked: onClickHandler,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"1\",\n        clicked: onClickHandler,\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"2\",\n        clicked: onClickHandler,\n        children: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"3\",\n        clicked: onClickHandler,\n        children: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"+\",\n        type: \"op\",\n        clicked: onClickHandler,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"zero\",\n        value: \"0\",\n        clicked: onClickHandler,\n        children: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \".\",\n        clicked: onClickHandler,\n        children: \".\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"=\",\n        type: \"op\",\n        clicked: onClickHandler,\n        children: \"=\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" sum = \", sum, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" prevNumber = \", prevInput, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" prev Op = \", preOperator, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" current Num = \", textInput, \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" Display result = \", displayResult, \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Calculator, \"fnf/nKv2/kpokzgMQwkXMvtqO7s=\");\n\n_c = Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["/Users/jellyhan/Documents/jialihan-git/react-calculator/src/component/calculator/Calculator.jsx"],"names":["React","useEffect","useState","useCallback","Button","Calculator","props","isEnterPressed","setIsEnterPressed","isToggled","setIsToggled","sum","setSum","sign","setSign","isNewNum","setIsNewNum","preOperator","setPreOperator","prevInput","setPrevInput","textInput","setTextInput","displayResult","setDisplayResult","onClickHandler","val","type","clearHandler","toggleSignHandler","percentageHanlder","compute","appendNumber","newNum","slice","length","parseFloat","updateResult","num","indexOf","op","curNum","console","log","newPreInput","newSum","tmp","result"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport Button from 'component/button/Button';\nimport \"./Calculator.css\";\n\nexport function Calculator(props) {\n    const [isEnterPressed, setIsEnterPressed] = useState(false);\n    const [isToggled, setIsToggled] = useState(false);\n    const [sum, setSum] = useState(0);\n    const [sign, setSign] = useState('');\n    const [isNewNum, setIsNewNum] = useState(true);\n    const [preOperator, setPreOperator] = useState('');\n    const [prevInput, setPrevInput] = useState('');\n    const [textInput, setTextInput] = useState('');\n    const [displayResult, setDisplayResult] = useState('')\n    const onClickHandler = (val, type) => {\n        if(val==='C')\n        {\n            clearHandler();\n        }\n        else if(val==='+/-'){\n            toggleSignHandler();\n        }\n        else if(val==='%')\n        {\n            percentageHanlder();\n        }\n        else if(val === '+')\n        {\n            if(!isNewNum)\n            {\n                compute('+');\n            }\n            setSign('+');\n            setIsNewNum(true);\n        }\n        else if(val === '-')\n        {\n            if(!isNewNum)\n            {\n                compute('-');             \n                // setSign('-');\n                // setIsNewNum(true);\n            }\n            // else{\n            //     appendNumber('-');\n            // }\n            setSign('-');\n            setIsNewNum(true);\n        }\n        else if(val==='*')\n        {\n            if(!isNewNum)\n            {\n                compute('*');\n            }\n            if(isEnterPressed)\n            {\n                // 1 - 2 = -1 * 6 should output -6\n                setSum(0);\n                setPrevInput(sum);\n            }\n            setPreOperator('*');\n            // if(!isToggled)\n            // {\n            //     // after toggle, reset it to \"+\" sign\n            //     setSign('+');\n            //     setPrevInput(\"-1\");\n            // }\n            setIsNewNum(true);\n        }\n        else if(val==='/')\n        {\n            if(!isNewNum)\n            {\n                compute('/');\n            }\n            setPreOperator('/');\n            if(isToggled)\n            {\n                // after toggle, reset it to \"+\" sign\n                setSign('+');\n            }\n            setIsNewNum(true);\n        }\n        else if(val === '=')\n        {\n            compute('=');\n            setPrevInput('');\n            setPreOperator('');\n            // if(isToggled)\n            // {\n            //     // after toggle, reset it to \"+\" sign\n            //     setSign('+');\n            // }\n            setIsNewNum(true);\n            setIsEnterPressed(true);\n        }\n        else{\n            appendNumber(val);  \n        }\n        if(isToggled && val !== '+/-')\n        {\n            setIsToggled(false);\n        }\n        if(isEnterPressed && val !== '=')\n        {\n            setIsEnterPressed(false);\n        }\n    }\n    const clearHandler = ()=> {\n        setTextInput('');\n        setSum(0);\n        setPrevInput('');\n        setIsNewNum(true);\n        setDisplayResult('');\n    }\n    const toggleSignHandler = ()=> {\n        if(displayResult === '')\n        {\n            return;\n        }\n        let newNum;\n        if(displayResult[0]==='-')\n        {\n            newNum = displayResult.slice(1,displayResult.length);\n        }\n        else\n        {\n            newNum = '-'+displayResult;\n        }\n        if(isEnterPressed)\n        {\n            setSum(parseFloat(newNum));\n        }\n        else\n        {\n            setTextInput(newNum);\n        }\n        updateResult(newNum);\n\n        // setSum(0); // all future calc is from this current newNum\n        setIsNewNum(false); // because now we have a newNum\n        setIsToggled(true);\n    }\n    const percentageHanlder = ()=>{\n        let newNum = parseFloat(displayResult) / 100;\n        setTextInput(newNum);\n        setDisplayResult(newNum);\n    }\n    const appendNumber = (num)=>{\n        let newNum;\n        if(isNewNum) {\n            newNum = ''+num;\n        }\n        else {\n            if(num==='.' && textInput.indexOf('.')>=0) {\n                return;\n            }\n            newNum = textInput+num;\n        }   \n        setTextInput(''+newNum);\n        updateResult(''+newNum);\n        setIsNewNum(false);\n    }\n    const compute = (op)=>{\n        let curNum = textInput ? parseFloat(textInput): 0;\n        console.log(\"current num: \" + curNum);\n        if(op === '*' || op === \"/\")\n        {\n                let newPreInput;\n                if(prevInput)\n                {\n                    // 4(preInput) *(preOperator) 2(curNum) *(op)\n                    newPreInput =  preOperator === \"*\" ? prevInput  * curNum :  prevInput  / curNum; \n                    updateResult(''+newPreInput);\n                }\n                else if(preOperator)\n                {\n                    // 1 + 2 = 3 * 6 /(current op) 2\n                    newPreInput = preOperator === \"*\" ? sum * curNum : sum / curNum;\n                }\n                else {\n                    // 4 * 2 \n                    newPreInput = curNum;\n                }\n                setPrevInput(newPreInput);\n            // }\n        }   \n        if(op === '+' || op==='-' || op === '=') {\n            // 1 - 2 = -1 -> toggle = 1 -> \"=\" show sum error case\n            // if(op==='=' && isToggled)\n            // {\n            //     // invalid \"=\" after toggle, return -1\n            //     setSum(0);\n            //     setTextInput('-1');\n            //     updateResult('-1');\n            //     setPrevInput('-1');\n            //     setSign('+');\n            //     return;\n            // }\n            let newSum = 0;\n            if(prevInput)\n            {\n                // 2 + 4 * 2 + ...\n                const tmp = preOperator === '*' ? prevInput * curNum : prevInput / curNum;\n                newSum = sum + (sign==='-' ? -tmp : tmp);\n            }\n            else if(preOperator)\n            {\n                // 1 + 2 = 3 * 3 ....\n                newSum = preOperator === \"*\" ? sum * curNum : sum / curNum;\n            }\n            else\n            {\n                // 2 + 3 - ...\n                newSum = sum + sign==='-' ? -curNum : curNum;\n            }\n            setSum(newSum);\n            updateResult(''+newSum);\n            setTextInput(''+curNum);\n        }\n    }\n    const updateResult =  (result) => {\n        setDisplayResult(result);\n    }\n\n    return (\n    <>\n    <div className=\"grid-container\">\n        <div className=\"results\">\n            {/* <p>1111888888222222222</p> */}\n            <p>{displayResult ? displayResult : '0'}</p>\n        </div>\n        <Button value=\"C\" type=\"tool\" clicked={onClickHandler}>C</Button>\n        <Button value=\"+/-\" type=\"tool\" clicked={onClickHandler} >+/-</Button>\n        <Button value=\"%\" type=\"tool\" clicked={onClickHandler} >%</Button>\n        <Button value=\"/\" type=\"op\" clicked={onClickHandler} >÷</Button>\n        <Button value=\"7\" clicked={onClickHandler} >7</Button>\n        <Button value=\"8\" clicked={onClickHandler} >8</Button>\n        <Button value=\"9\" clicked={onClickHandler} >9</Button>\n        <Button value=\"*\" type=\"op\" clicked={onClickHandler} >*</Button>\n        <Button value=\"4\" clicked={onClickHandler} >4</Button>\n        <Button value=\"5\" clicked={onClickHandler} >5</Button>\n        <Button value=\"6\" clicked={onClickHandler} >6</Button>\n        <Button value=\"-\" type=\"op\" clicked={onClickHandler} >-</Button>\n        <Button value=\"1\" clicked={onClickHandler} >1</Button>\n        <Button value=\"2\" clicked={onClickHandler} >2</Button>\n        <Button value=\"3\" clicked={onClickHandler} >3</Button>\n        <Button value=\"+\" type=\"op\" clicked={onClickHandler} >+</Button>\n        <Button type=\"zero\" value=\"0\" clicked={onClickHandler} >0</Button>\n        <Button value=\".\" clicked={onClickHandler} >.</Button>\n        <Button value=\"=\" type=\"op\" clicked={onClickHandler} >=</Button>\n    </div>\n    <h3> sum = {sum} </h3>\n    <h3> prevNumber = {prevInput} </h3>\n    <h3> prev Op = {preOperator} </h3>\n    <h3> current Num = {textInput}  </h3>\n    <h3> Display result = {displayResult}  </h3>\n    </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}